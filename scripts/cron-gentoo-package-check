#!/bin/bash

PackageStateCache=$($HOME/bin/get-status-file package-state-cache)
PackageStateCacheTime=$(stat -c %Y $PackageStateCache)
EmergeLogTime=$(stat -c %Y /var/log/emerge.log)
PortageTime=$(date -d "$(cat /var/db/repos/gentoo/metadata/timestamp.chk)" +%s)

function check_emerge_update {
  UpdateCount=$(emerge --pretend --quiet --update --deep @world | wc -l)
  if (($UpdateCount >= 5)); then
    echo " $UpdateCount" > $PackageStateCache
  else
    echo " " > $PackageStateCache
  fi
}

if (($PortageTime > $EmergeLogTime && $PackageStateCacheTime - $PortageTime < 300)); then
  check_emerge_update
fi

if (($EmergeLogTime > $PackageStateCacheTime)); then
  check_emerge_update
fi

PackageFile=$($HOME/bin/get-status-file packages)
PackageFileTime=$(stat -c %Y $PackageFile)
NowTime=$(date +%s)

ConfigFilesToSync=(
  /etc/genkernel.conf
  /etc/kernels/kernel-config-$(uname -r)
  /etc/portage/make.conf
  /etc/portage/package.use
  /etc/portage/profile/package.provided
  /var/lib/portage/world
)

ConfigFileDir="$PERSONAL_CONFIG_DIR/linux/gentoo/$(hostname)"
mkdir -p "$ConfigFileDir"
for f in ${ConfigFilesToSync[@]}; do
  LocalFile=$ConfigFileDir/$(basename $f)
  LocalFileTime=$(stat -c %Y $LocalFile || echo 0)
  LiveConfigTime=$(stat -c %Y $f)
  if (($LiveConfigTime > $LocalFileTime)); then
    cp $f $LocalFile
  fi
done

ChangedFiles=$(git -C $PERSONAL_CONFIG_DIR status -s | grep linux/gentoo | wc -l)
if (($ChangedFiles != 0)); then
  echo " " > $PackageFile
  exit
fi

if (($NowTime - $PortageTime > 3600 * 24)); then
  echo " " > $PackageFile
  exit
fi

cat $PackageStateCache > $PackageFile

